openapi: 3.0.3
info:
  title: Twitter clone TypeScript
  version: 1.0.11
servers:
  - url: http://localhost:4000
  - url: https://api-nguyenhuynh.site
tags:
  - name: users
    description: Các API liên quan đến user
  - name: tweets
    description: Các API liên quan đến tweet
  - name: bookmarks
    description: Các API liên quan đến bookmark
  - name: conversations
    description: Các API liên quan đến conversation
  - name: likes
    description: Các API liên quan đến like
  - name: static
    description: Các API để serve ảnh, video
  - name: search
    description: Các API liên quan đến search
  - name: medias
    description: Các API liên quan đến media
paths:
  /users/login:
    post:
      tags:
        - users
      summary: Đăng nhập
      description: Đăng nhập vào hệ thống
      operationId: login
      requestBody:
        description: Thông tin đăng nhập
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  result:
                    $ref: '#/components/schemas/SuccessAthentication'

        '422':
          description: Invalid Input
  /users/me:
    get:
      tags:
        - users
      summary: Lấy thông tin user
      description: Lấy thông tin user
      operationId: getMe

      responses:
        default:
          description: Lấy thông tin user thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

      security:
        - BearerAuth: []
  /users/oauth/google:
    get:
      tags:
        - users
      summary: Đăng nhập Google
      description: Đăng nhập Google
      operationId: googleLogin
      parameters:
        - name: code
          in: query
          description: The code value that need to verify gmail
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Gmail chưa được xác thực
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gmail chưa được xác thực
        '200':
          description: Đăng nhập Google
  /users/register:
    post:
      tags:
        - users
      summary: Đăng kí tài khoản mới
      description: Đăng kí tài khoản mới
      operationId: register
      requestBody:
        description: Chi tiết đăng ký người dùng
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Register success
                  result:
                    $ref: '#/components/schemas/SuccessAthentication'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
  /users/logout:
    post:
      summary: Đăng xuất khỏi hệ thống
      description: Đăng xuất khỏi hệ thống
      operationId: logout
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: refresh_token cần được vô hiệu hóa
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjY1NWZmYzg3NjczNGE1YWViOGM5OThlIiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJpYXQiOjE3MTg1MDk3MjksImV4cCI6MTcyNzE0OTcyOX0.OEkzHMUMWm-Fh7FSv2oo5kMQShhsHK2XaKJwQlij5os
      responses:
        default:
          description: Đăng xuất thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Logout success'
      security:
        - BearerAuth: []
  /users/refresh-token:
    post:
      summary: Làm mới access_token
      description: Làm mới access_token
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: refresh_token để tạo mới access_token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjY1NWZmYzg3NjczNGE1YWViOGM5OThlIiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJpYXQiOjE3MTg1MDk3MjksImV4cCI6MTcyNzE0OTcyOX0.OEkzHMUMWm-Fh7FSv2oo5kMQShhsHK2XaKJwQlij5os
      responses:
        default:
          description: Successfully refreshed token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAthentication'
      security:
        - BearerAuth: []
  /users/verify-email:
    post:
      summary: Xác thực email
      description: Xác thực email
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_verify_token:
                  type: string
                  description: The token used to verify the email
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjY3N2NiZmUwNmEzYzQxYzE4Y2Y2ZDRhIiwidG9rZW5fdHlwZSI6MywidmVyaWZ5IjowLCJpYXQiOjE3MTkxMjcwMzgsImV4cCI6MTcxOTczMTgzOH0.Z33ycHXVjvOeKUE09jrtDLYIjIrCqd9nxIptZd04jgI'
      responses:
        default:
          description: Email xác thực thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Email verify success'
                  result:
                    $ref: '#/components/schemas/SuccessAthentication'
  /users/{username}:
    get:
      summary: Lâý thông tin người dùng
      description: Lâý thông tin người dùng
      tags:
        - users
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: The username of the user whose profile is being retrieved
          example: 'user66560400389d949535854b02'
      responses:
        default:
          description: Lấy thông tin người dùng thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - BearerAuth: []
  /tweets:
    post:
      summary: Tạo một tweet
      description: Tạo một tweet
      tags:
        - tweets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequestBody'
      responses:
        '201':
          description: Tweet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
      security:
        - BearerAuth: []
  /tweets/{tweet_id}:
    get:
      summary: Lấy 1 tweet
      description: Lấy 1 tweet
      tags:
        - tweets
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the tweet to retrieve
          example: '60d0fe4f5311236168a109ca'
      responses:
        default:
          description: Lấy 1 tweet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get tweet success'
                  result:
                    $ref: '#/components/schemas/TweetDetail'
  /tweets/:
    get:
      summary: Lấy new feed
      description: Lấy new feed
      tags:
        - tweets
      parameters:
        - name: limit
          in: query
          description: Giới hạn số tweet trả về
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Trang hiển thị
          schema:
            type: string
      responses:
        default:
          description: Lấy new feed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get tweets success'
                  result:
                    type: object
                    properties:
                      tweets:
                        type: array
                        items:
                          $ref: '#/components/schemas/TweetChild'
      security:
        - BearerAuth: []
  /tweets/{tweet_id}/children:
    get:
      summary: Lấy tweet con 1 tweet (retweet, quote hoặc comment)
      description: Lấy tweet con 1 tweet (retweet, quote hoặc comment)
      tags:
        - tweets
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            type: string
          description: Id của tweet cha
          example: '664e12bd4506fa7ec0c856f1'
        - name: limit
          in: query
          required: true
          schema:
            type: string
          description: Giới hạn số tweet trả về
          example: '2'
        - name: page
          in: query
          required: true
          schema:
            type: string
          description: Trang hiển thị
          example: '1'
        - name: tweet_type
          in: query
          required: true
          schema:
            type: string
          description: Loại tweet (retweet, quote hoặc comment)
          example: '3'
      responses:
        default:
          description: Lấy tweet con thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get Tweet Children Successfully'
                  result:
                    type: object
                    properties:
                      tweets:
                        type: array
                        items:
                          $ref: '#/components/schemas/TweetChild'
      security:
        - BearerAuth: []
  /static/video-hls/{id}/master.m3u8:
    get:
      summary: Serve file m3u8
      description: Serve file m3u8
      tags:
        - static
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The name of the video-hls
          example: 'UfKNlmEYVBBZW5fFbKlPi'
      responses:
        default:
          description: 'Serve file m3u8'
  /static/video-hls/{id}/{v}/{segment}:
    get:
      summary: Serve file ts
      description: Serve file ts
      tags:
        - static
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The name of the video-hls
          example: 'UfKNlmEYVBBZW5fFbKlPi'
        - name: v
          in: path
          required: true
          schema:
            type: string
          description: The version of the video-hls
          example: 'v0'
        - name: segment
          in: path
          required: true
          schema:
            type: string
          description: The segment of the video-hls
          example: 'fileSequence2.ts'
      responses:
        default:
          description: 'Serve file ts'
  /bookmarks:
    post:
      summary: Bookmark một Tweet
      tags:
        - bookmarks
      description: Cho phép người dùng bookmark một Tweet.
      operationId: bookmarkTweet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tweet_id:
                  type: string
                  description: The ID of the tweet to bookmark
                  example: '664e12bd4506fa7ec0c856f1'
      responses:
        default:
          description: Bookmark a Tweet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Bookmark successfully'
                  result:
                    $ref: '#/components/schemas/BookmarkResponse'
      security:
        - BearerAuth: []
  /bookmarks/tweets/{tweet_id}:
    delete:
      summary: Unbookmark một Tweet
      description: Cho phép người dùng unbookmark một Tweet.
      tags:
        - bookmarks
      operationId: unbookmarkTweet
      parameters:
        - name: tweet_id
          in: path
          required: true
          description: The ID of the tweet to unbookmark
          schema:
            type: string
            example: '664e12bd4506fa7ec0c856f1'
      responses:
        default:
          description: Unbookmark a Tweet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Unbookmark successfully'
      security:
        - BearerAuth: []
  /likes:
    post:
      summary: Like một Tweet
      description: Cho phéo người dùng thêm 1 tweet vào danh sách yêu thích.
      tags:
        - likes
      operationId: likeTweet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tweet_id:
                  type: string
                  description: The ID of the tweet to like
                  example: '664e12bd4506fa7ec0c856f1'
      responses:
        default:
          description: Like a Tweet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Like successfully'
                  result:
                    $ref: '#/components/schemas/BookmarkResponse'
      security:
        - BearerAuth: []
  /likes/tweets/{tweet_id}:
    delete:
      summary: Unlike một Tweet
      description: Cho phép người dùng unlike một Tweet.
      tags:
        - likes
      operationId: unlikeTweet
      parameters:
        - name: tweet_id
          in: path
          required: true
          description: The ID of the tweet to unlike
          schema:
            type: string
            example: '664e12bd4506fa7ec0c856f1'
      responses:
        default:
          description: Unlike a Tweet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Unlike successfully'
      security:
        - BearerAuth: []
  /search:
    get:
      summary: Search
      description: Searches for resources with optional pagination.
      tags:
        - search
      operationId: search
      parameters:
        - name: limit
          in: query
          required: true
          description: Limit the number of results
          schema:
            type: string
            example: '10'
        - name: page
          in: query
          required: true
          description: Page number for pagination
          schema:
            type: string
            example: 1
        - name: content
          in: query
          required: true
          description: Search query
          schema:
            type: string
            example: 'tweet'
        - name: people_follow
          in: query
          required: false
          description: Followed people or Anyone
          schema:
            type: string
            example: '0'
        - name: media_type
          in: query
          required: false
          description: Type of media (Image or Video)
          schema:
            type: string
            example: 'video'
      responses:
        default:
          description: Search
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Search Successfully'
                  result:
                    type: object
                    properties:
                      tweets:
                        type: array
                        items:
                          $ref: '#/components/schemas/TweetChild'
                      limit:
                        type: number
                        example: 10
                      page:
                        type: number
                        example: 1
                      totalPage:
                        type: number
                        example: 1
      security:
        - BearerAuth: []
  /medias/upload-image:
    post:
      summary: Upload image
      description: Upload image
      tags:
        - medias
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        default:
          description: Upload image
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Upload image successfully'
                  result:
                    properties:
                      url:
                        type: string
                        example: 'https://twitter-clone-2024-3005-ap-southeast-1.s3.ap-southeast-1.amazonaws.com/images/cdd16000ba8ccb01391539c00.jpg'
                      type:
                        $ref: '#/components/schemas/MediaType'
      security:
        - BearerAuth: []
  /medias/upload-video:
    post:
      summary: Upload video
      description: Upload video
      tags:
        - medias
      operationId: uploadVideo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
      responses:
        default:
          description: Upload video successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Upload video successfully'
                  result:
                    properties:
                      url:
                        type: string
                        example: 'https://twitter-clone-2024-3005-ap-southeast-1.s3.ap-southeast-1.amazonaws.com/videos/mLntLdfhbchVPzTFwnGJL.mp4'
                      type:
                        $ref: '#/components/schemas/MediaType'
      security:
        - BearerAuth: []
  /medias/upload-video-hls:
    post:
      summary: Upload video hls
      description: Upload video hls
      tags:
        - medias
      operationId: uploadVideoHls
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
      responses:
        default:
          description: Upload video hls successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Upload video hls successfully'
                  result:
                    properties:
                      url:
                        type: string
                        example: 'https://twitter-clone-2024-3005-ap-southeast-1.s3.ap-southeast-1.amazonaws.com/videos/mLntLdfhbchVPzTFwnGJL.mp4'
                      type:
                        $ref: '#/components/schemas/MediaType'
      security:
        - BearerAuth: []
  /medias/video-status/{id}:
    get:
      summary: Lấy video status
      description: Lưu ý chỉ áp dụng cho upload hls bởi vì quá trính encode video lâu, ta sẽ dùng route này để check status video
      tags:
        - medias
      operationId: getVideoStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: name video
          example: 'UfKNlmEYVBBZW5fFbKlPi'
      responses:
        default:
          description: Lấy video status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get video status success'
                  result:
                    $ref: '#/components/schemas/VideoStatus'
      security:
        - BearerAuth: []
  /conversations/receiver/{receiver_id}:
    get:
      summary: Lấy đoạn chat giữa 2 người
      description: Lấy đoạn chat giữa 2 người
      tags:
        - conversations
      parameters:
        - name: receiver_id
          in: path
          required: true
          schema:
            type: string
          description: ID của người nhận
          example: '66560400389d949535854b02'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Số tin nhắn trả về
          example: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Trang hiển thị
          example: 1
      responses:
        default:
          description: Lấy đoạn chat giữa 2 người
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get conversations successfully'
                  result:
                    type: object
                    properties:
                      conversations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Conversation'
                      limit:
                        type: integer
                        example: 10
                      page:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 9
      security:
        - BearerAuth: []

components:
  schemas:
    Conversation:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the conversation
          example: '666d91ecf67cf43a27a36e33'
        content:
          type: string
          description: Content of the message
          example: 'oke'
        created_at:
          type: string
          format: date-time
          description: Timestamp when the conversation was created
          example: '2024-06-15T13:06:52.626Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the conversation was last updated
          example: '2024-06-15T13:06:52.626Z'
        receiver_id:
          type: string
          description: ID of the receiver
          example: '66560400389d949535854b02'
        sender_id:
          type: string
          description: ID of the sender
          example: '6655ffc876734a5aeb8c998e'
    LoginBody:
      type: object
      properties:
        email:
          type: string
          example: yugivip277+1@gmail.com
        password:
          type: string
          example: Nguyen.123
    SuccessAthentication:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjY1NWZmYzg3NjczNGE1YWViOGM5OThlIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE3MTg1MDk3MjksImV4cCI6MTcxODU5NjEyOX0.706jmoJA1ABCkY3J9XHVvU9H2R-BC-24ouGCO27G7ts
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjY1NWZmYzg3NjczNGE1YWViOGM5OThlIiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJpYXQiOjE3MTg1MDk3MjksImV4cCI6MTcyNzE0OTcyOX0.OEkzHMUMWm-Fh7FSv2oo5kMQShhsHK2XaKJwQlij5os
    User:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          description: The unique identifier for the user
          example: 6655ffc876734a5aeb8c998e
        name:
          type: string
          description: The name of the user
          example: nguyen277
        email:
          type: string
          description: The email address of the user
          example: yugivip277+1@gmail.com
        date_of_birth:
          type: string
          format: ISO8601
          description: The date of birth of the user
          example: 2024-04-04T02:57:07.194Z
        created_at:
          type: string
          format: ISO8601
          description: The timestamp when the user was created
          example: 2024-05-28T16:01:12.988Z
        updated_at:
          type: string
          format: ISO8601
          description: The timestamp when the user was last updated
          example: 2024-05-28T16:36:03.544Z
        verify:
          $ref: '#/components/schemas/UserVerifyStatus'
        twitter_circle:
          type: array
          items:
            type: string
            format: MongoId
          description: A list of Twitter circles the user belongs to
          example: ['6655ffc876734a5aeb8c998e']
        bio:
          type: string
          description: The bio of the user
          example: 'This is my bio.'
        location:
          type: string
          description: The location of the user
          example: 'Thu Duc, Ho Chi Minh'
        website:
          type: string
          description: The website of the user
          example: 'www.example.com'
        username:
          type: string
          description: The username of the user
          example: user6655ffc876734a5aeb8c998e
        avatar:
          type: string
          description: The URL of the user's avatar
          example: 'http:localhost:4000/images/avatars/john_doe.jpg'
        cover_photo:
          type: string
          description: The URL of the user's cover photo
          example: 'http:localhost:4000/images/avatars/john_doe.jpg'
    UserVerifyStatus:
      type: number
      enum: [Unverified, Verified, Banned]
      example: 1
    RegisterBody:
      type: object
      properties:
        name:
          type: string
          example: JohnDoe
        email:
          type: string
          format: email
          example: yugivip277+6@gmail.com
        password:
          type: string
          format: password
          example: Nguyen.123
        confirm_password:
          type: string
          format: password
          example: Nguyen.123
        date_of_birth:
          type: string
          format: ISO8601
          example: 2024-04-04T02:57:07.194Z
      required:
        - name
        - email
        - password
        - confirm_password
        - date_of_birth
    TweetRequestBody:
      type: object
      required:
        - type
        - audience
        - content
        - parent_id
        - hashtags
        - mentions
        - medias
      properties:
        type:
          $ref: '#/components/schemas/TweetType'
        audience:
          $ref: '#/components/schemas/TweetAudience'
        content:
          type: string
          description: The content of the tweet
          example: 'Tweet 12345'
        parent_id:
          type: string
          nullable: true
          description: The ID of the parent tweet, null if it's a root tweet
          example: null
        hashtags:
          type: array
          items:
            type: string
          description: List of hashtags associated with the tweet
          example: ['nextjs', 'reactjs', 'nodejs']
        mentions:
          type: array
          items:
            type: string
          description: List of user mentions in the tweet
          example: []
        medias:
          type: array
          items:
            type: object
            required:
              - url
              - type
            properties:
              url:
                type: string
                format: uri
                description: URL of the media
                example: 'https://i.pinimg.com/736x/31/e3/11/31e311a854eb85b5de6008d2ddbc666d.jpg'
              type:
                type: integer
                description: Type of the media (e.g., 1 for image, 2 for video, etc.)
                example: 1
    TweetType:
      type: number
      enum: [Tweet, Retweet, Comment, QuoteTweet]
      example: 0
    TweetAudience:
      type: number
      enum: [Everyone, TwitterCircle]
      example: 0
    Media:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL of the media
          example: 'https://i.pinimg.com/736x/31/e3/11/31e311a854eb85b5de6008d2ddbc666d.jpg'
        type:
          $ref: '#/components/schemas/MediaType'
    MediaType:
      type: number
      enum: [Image, Video, HlS]
      example: 0
    Tweet:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          description: The unique identifier of the tweet
          example: '60d0fe4f5311236168a109ca'
        user_id:
          type: string
          format: MongoId
          description: The unique identifier of the user who created the tweet
          example: '60d0fe4f5311236168a109cb'
        type:
          $ref: '#/components/schemas/TweetType'
        audience:
          $ref: '#/components/schemas/TweetAudience'
        content:
          type: string
          description: The content of the tweet
          example: 'Tweet 12345'
        parent_id:
          type: string
          nullable: true
          format: MongoId
          description: The ID of the parent tweet, null if it's a root tweet
          example: null
        hashtags:
          type: array
          items:
            type: string
            format: MongoId
          description: List of hashtags associated with the tweet
          example: ['664362f736ca83bf8fecfe44', '664362f736ca83bf8fecfe45', '6643630b36ca83bf8fecfe49']
        mentions:
          type: array
          items:
            type: string
            format: MongoId
          description: List of user mentions in the tweet
          example: []
        medias:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
                description: URL of the media
                example: 'https://i.pinimg.com/736x/31/e3/11/31e311a854eb85b5de6008d2ddbc666d.jpg'
              type:
                $ref: '#/components/schemas/MediaType'
        guest_views:
          type: integer
          description: The number of views by guests
          example: 100
        user_views:
          type: integer
          description: The number of views by registered users
          example: 200
        created_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was created
          example: '2024-06-23T10:20:30Z'
        updated_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was last updated
          example: '2024-06-23T10:30:30Z'
    TweetDetail:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          description: The unique identifier of the tweet
          example: '60d0fe4f5311236168a109ca'
        user_id:
          type: string
          format: MongoId
          description: The unique identifier of the user who created the tweet
          example: '60d0fe4f5311236168a109cb'
        type:
          $ref: '#/components/schemas/TweetType'
        audience:
          $ref: '#/components/schemas/TweetAudience'
        content:
          type: string
          description: The content of the tweet
          example: 'Tweet 12345'
        parent_id:
          type: string
          nullable: true
          format: MongoId
          description: The ID of the parent tweet, null if it's a root tweet
          example: null
        hashtags:
          type: array
          items:
            type: string
            format: MongoId
          description: List of hashtags associated with the tweet
          example: ['664362f736ca83bf8fecfe44', '664362f736ca83bf8fecfe45', '6643630b36ca83bf8fecfe49']
        mentions:
          type: array
          items:
            type: string
            format: MongoId
          description: List of user mentions in the tweet
          example: []
        medias:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
                description: URL of the media
                example: 'https://i.pinimg.com/736x/31/e3/11/31e311a854eb85b5de6008d2ddbc666d.jpg'
              type:
                $ref: '#/components/schemas/MediaType'
        guest_views:
          type: integer
          description: The number of views by guests
          example: 100
        user_views:
          type: integer
          description: The number of views by registered users
          example: 200
        created_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was created
          example: '2024-06-23T10:20:30Z'
        updated_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was last updated
          example: '2024-06-23T10:30:30Z'
        bookmarks:
          type: integer
          description: The number of bookmarks of the tweet
          example: 0
        likes:
          type: integer
          description: The number of likes of the tweet
          example: 0
        retweet_count:
          type: integer
          description: The number of retweets of the tweet
          example: 0
        comment_count:
          type: integer
          description: The number of comments on the tweet
          example: 0
        quote_count:
          type: integer
          description: The number of quotes of the tweet
          example: 0
    TweetChild:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          description: The unique identifier of the tweet
          example: '60d0fe4f5311236168a109ca'
        user_id:
          type: string
          format: MongoId
          description: The unique identifier of the user who created the tweet
          example: '60d0fe4f5311236168a109cb'
        type:
          $ref: '#/components/schemas/TweetType'
        audience:
          $ref: '#/components/schemas/TweetAudience'
        content:
          type: string
          description: The content of the tweet
          example: 'Tweet 12345'
        parent_id:
          type: string
          nullable: true
          format: MongoId
          description: The ID of the parent tweet, null if it's a root tweet
          example: null
        hashtags:
          type: array
          items:
            type: string
            format: MongoId
          description: List of hashtags associated with the tweet
          example: ['664362f736ca83bf8fecfe44', '664362f736ca83bf8fecfe45', '6643630b36ca83bf8fecfe49']
        mentions:
          type: array
          items:
            type: string
            format: MongoId
          description: List of user mentions in the tweet
          example: []
        medias:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
                description: URL of the media
                example: 'https://i.pinimg.com/736x/31/e3/11/31e311a854eb85b5de6008d2ddbc666d.jpg'
              type:
                $ref: '#/components/schemas/MediaType'
        guest_views:
          type: integer
          description: The number of views by guests
          example: 100
        user_views:
          type: integer
          description: The number of views by registered users
          example: 200
        created_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was created
          example: '2024-06-23T10:20:30Z'
        updated_at:
          type: string
          format: ISO8601
          description: The timestamp when the tweet was last updated
          example: '2024-06-23T10:30:30Z'
        user:
          $ref: '#/components/schemas/User'
        bookmarks:
          type: integer
          description: The number of bookmarks of the tweet
          example: 0
        likes:
          type: integer
          description: The number of likes of the tweet
          example: 0
        retweet_count:
          type: integer
          description: The number of retweets of the tweet
          example: 0
        comment_count:
          type: integer
          description: The number of comments on the tweet
          example: 0
        quote_count:
          type: integer
          description: The number of quotes of the tweet
          example: 0
    BookmarkResponse:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          description: The unique identifier for the bookmark
          example: '667a30a20c179e41b79c613a'
        tweet_id:
          type: string
          description: The ID of the bookmarked tweet
          example: '664e12bd4506fa7ec0c856f1'
        user_id:
          type: string
          description: The ID of the user who bookmarked the tweet
          example: '6655fe1ef257bdd30841c4ba'
        created_at:
          type: string
          format: ISO8601
          description: The timestamp when the bookmark was created
          example: '2024-06-25T02:51:14.262Z'
    VideoStatus:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier
          example: 665d8e8ba3b5209d43096052
        name:
          type: string
          description: Name of the object
          example: UfKNlmEYVBBZW5fFbKlPi
        status:
          $ref: '#/components/schemas/EncodingStatus'
        message:
          type: string
          description: Message associated with the object
          example: ''
        created_at:
          type: string
          format: ISO8601
          description: Creation timestamp
          example: 2024-06-03T09:36:11.012Z
        updated_at:
          type: string
          format: ISO8601
          description: Last update timestamp
          example: 2024-06-03T09:36:56.209Z
    EncodingStatus:
      type: number
      enum: [Pending, Processing, Success, Failed]
      example: 0

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
